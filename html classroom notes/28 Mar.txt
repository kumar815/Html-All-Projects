Regular Expressions
Sudhakar Sharma
â€¢
28 Mar
TextBox Attributes
1. id
2. name
3. class
4. value
5. placeholder
6. autofocus
7. readonly
8. disabled
9. size
10. required
11. minlength
12. maxlength
13. list
14. pattern

                                 Regular Expression
Meta Characters
    ?
    +
    *
    .
    |
    \

    \i

    \d

    \D

    \w                    It refers to word chars, which include  " A-Z, a-z, 0-9, _ "

    \W                    It refers to non-word chars - all special chars except _ .
                        It will not allow "A-Za-z0-9_".

    \s                    It refers to blank space.

                        pattern="\d\s\D"            => 8 A
                        pattern="\d\s?\D"        => 8A, 8 A

    [ ]                    It defines specific and range of elements.

    [a, d, s]            Only specified chars allowed.

    [A-Z]                Only uppercase letters allowed.

    [a-z]                Only lower case letters allowed

    [a-zA-Z]            Both upper and lower case allowed.

    [a-Z]                Both upper and lower case allowed.

    [0-9]                Only numeric allowed.

    [a-zA-Z0-9]        Alpha numeric allowed.

    [a-mA-M4-9]        Only chars in specified range are allowed.

    [^a,d,s]            Excluding specified chars all others allowed.

    [^a-m]                Excluding the chars in specified range, all others allowed.

    ( )                    It defines union of chars. It is used for building expressions.

    (?=.*[A-Z])        It refers to atleast one uppercase letter.

    (?=.*[0-9])            It refers atleast one numeric.

    (?=.*[!@#$%^&])  Atleast one special char.

    [!@#$%&]        Only specified special chars allowed

Quantifiers

    {4}                    Exactly 4 chars only allowed.

    {4, 10}                Between 4 to 10 chars only.

    {4, }                Minimum 4 and maximum any.

Ex:
1. Write a pattern to validate user name 4 to 10 chars uppercase only.

    <input type="text"  pattern="[A-Z]{4,10}">

2. Write a pattern to validate user id 4 to 15 chars alpha numeric with "_".

    <input type="text"  pattern="\w{4,15}">

3. Write a pattern to validate mobile number starting with +91 and  have 10 digits.

    <input type="text"  pattern="\+91\d{10}">

4. Write a pattern to validate bank IFSC code. [SBI]

    <input type="text"  pattern="SBIN0\d{6}">

5. Write a pattern to validate both SBI and HDFC Ifsc codes in one textbox.

                    SBIN0012456
                    HDFC0002245
   
    <input type="text"  pattern="[SBIN0\d{6}] | [HDFC000\d{4}]">


6. Write a pattern to validate UserId  4 to 10 chars alpha numeric with atleast one uppercase letter.

    <input type="text"  pattern="(?=.*[A-Z])\w{4,10}">

7. Write a pattern to validate userid with atleast one uppercase, and numeric with alpha numeric 4 to 10 chars.

     <input type="text"  pattern="(?=.*[A-Z])(?=.*[0-9])\w{4,10}">


8. Write a pattern to validate user id with at least 1 uppercase, 1 numeric and 1 special char with  4 to 10 chars.

     <input type="text"  pattern="(?=.*[A-Z])(?=.*[0-9])(?=.*\W)[A-Za-z0-9\W]{4,10}">

9. Write a pattern to validate following phone number format

                +(1)(425) 555-0100

    <input type="text"   pattern="\+\(1\)\(\d{3}\)\s\d{3}-\d{4}">


                +(44)(20) 1234 5678

    <input type="text"  pattern="\+\(44\)\(\d{2}\)\s\d{4}\s\d{4}">

Task : Write a pattern for validating email address.
